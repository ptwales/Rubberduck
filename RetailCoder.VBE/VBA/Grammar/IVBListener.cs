//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Mathieu\Source\Repos\Rubberduck\RetailCoder.VBE\VBA\VisualBasic6.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Rubberduck.VBA.Grammar {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="VBParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IVBListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.stopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStopStmt([NotNull] VBParser.StopStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.stopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStopStmt([NotNull] VBParser.StopStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsDiv</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsDiv([NotNull] VBParser.VsDivContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsDiv</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsDiv([NotNull] VBParser.VsDivContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.inputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputStmt([NotNull] VBParser.InputStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.inputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputStmt([NotNull] VBParser.InputStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.lsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLsetStmt([NotNull] VBParser.LsetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.lsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLsetStmt([NotNull] VBParser.LsetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ArgList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgList([NotNull] VBParser.ArgListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ArgList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgList([NotNull] VBParser.ArgListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVisibility([NotNull] VBParser.VisibilityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVisibility([NotNull] VBParser.VisibilityContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.writeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWriteStmt([NotNull] VBParser.WriteStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.writeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWriteStmt([NotNull] VBParser.WriteStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsNegation</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsNegation([NotNull] VBParser.VsNegationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsNegation</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsNegation([NotNull] VBParser.VsNegationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.functionOrArrayCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionOrArrayCallStmt([NotNull] VBParser.FunctionOrArrayCallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.functionOrArrayCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionOrArrayCallStmt([NotNull] VBParser.FunctionOrArrayCallStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsLt</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsLt([NotNull] VBParser.VsLtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsLt</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsLt([NotNull] VBParser.VsLtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.asTypeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsTypeClause([NotNull] VBParser.AsTypeClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.asTypeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsTypeClause([NotNull] VBParser.AsTypeClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.AppActivateStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAppactivateStmt([NotNull] VBParser.AppactivateStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.AppActivateStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAppactivateStmt([NotNull] VBParser.AppactivateStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.iCS_S_DictionaryCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_S_DictionaryCall([NotNull] VBParser.ICS_S_DictionaryCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.iCS_S_DictionaryCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_S_DictionaryCall([NotNull] VBParser.ICS_S_DictionaryCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ExplicitCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitCallStmt([NotNull] VBParser.ExplicitCallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ExplicitCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitCallStmt([NotNull] VBParser.ExplicitCallStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.outputList_Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputList_Expression([NotNull] VBParser.OutputList_ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.outputList_Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputList_Expression([NotNull] VBParser.OutputList_ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArg([NotNull] VBParser.ArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArg([NotNull] VBParser.ArgContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsLike</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsLike([NotNull] VBParser.VsLikeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsLike</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsLike([NotNull] VBParser.VsLikeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.DefTypeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeftypeStmt([NotNull] VBParser.DeftypeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.DefTypeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeftypeStmt([NotNull] VBParser.DeftypeStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.dictionaryCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDictionaryCallStmt([NotNull] VBParser.DictionaryCallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.dictionaryCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDictionaryCallStmt([NotNull] VBParser.DictionaryCallStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.rsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRsetStmt([NotNull] VBParser.RsetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.rsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRsetStmt([NotNull] VBParser.RsetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>blockIfThenElse</c>
	/// labeled alternative in <see cref="VBParser.ifThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockIfThenElse([NotNull] VBParser.BlockIfThenElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>blockIfThenElse</c>
	/// labeled alternative in <see cref="VBParser.ifThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockIfThenElse([NotNull] VBParser.BlockIfThenElseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.memberPropertyCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberPropertyCallStmt([NotNull] VBParser.MemberPropertyCallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.memberPropertyCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberPropertyCallStmt([NotNull] VBParser.MemberPropertyCallStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsAdd</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsAdd([NotNull] VBParser.VsAddContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsAdd</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsAdd([NotNull] VBParser.VsAddContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ArgDefaultValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgDefaultValue([NotNull] VBParser.ArgDefaultValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ArgDefaultValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgDefaultValue([NotNull] VBParser.ArgDefaultValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ChdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChdirStmt([NotNull] VBParser.ChdirStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ChdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChdirStmt([NotNull] VBParser.ChdirStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.typeStmt_Element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeStmt_Element([NotNull] VBParser.TypeStmt_ElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.typeStmt_Element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeStmt_Element([NotNull] VBParser.TypeStmt_ElementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.getStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetStmt([NotNull] VBParser.GetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.getStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetStmt([NotNull] VBParser.GetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ModuleHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleHeader([NotNull] VBParser.ModuleHeaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ModuleHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleHeader([NotNull] VBParser.ModuleHeaderContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.redimStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRedimStmt([NotNull] VBParser.RedimStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.redimStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRedimStmt([NotNull] VBParser.RedimStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.sC_Case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSC_Case([NotNull] VBParser.SC_CaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.sC_Case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSC_Case([NotNull] VBParser.SC_CaseContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsAddressOf</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsAddressOf([NotNull] VBParser.VsAddressOfContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsAddressOf</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsAddressOf([NotNull] VBParser.VsAddressOfContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.BeepStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBeepStmt([NotNull] VBParser.BeepStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.BeepStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBeepStmt([NotNull] VBParser.BeepStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.DeclareStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclareStmt([NotNull] VBParser.DeclareStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.DeclareStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclareStmt([NotNull] VBParser.DeclareStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.onErrorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnErrorStmt([NotNull] VBParser.OnErrorStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.onErrorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnErrorStmt([NotNull] VBParser.OnErrorStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.selectCaseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectCaseStmt([NotNull] VBParser.SelectCaseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.selectCaseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectCaseStmt([NotNull] VBParser.SelectCaseStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsMid</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsMid([NotNull] VBParser.VsMidContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsMid</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsMid([NotNull] VBParser.VsMidContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.FunctionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionStmt([NotNull] VBParser.FunctionStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.FunctionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionStmt([NotNull] VBParser.FunctionStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.DeleteSettingStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeleteSettingStmt([NotNull] VBParser.DeleteSettingStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.DeleteSettingStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeleteSettingStmt([NotNull] VBParser.DeleteSettingStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.Subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubscript([NotNull] VBParser.SubscriptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.Subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubscript([NotNull] VBParser.SubscriptContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.iCS_B_SubCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_B_SubCall([NotNull] VBParser.ICS_B_SubCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.iCS_B_SubCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_B_SubCall([NotNull] VBParser.ICS_B_SubCallContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>optionBaseStmt</c>
	/// labeled alternative in <see cref="VBParser.ModuleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionBaseStmt([NotNull] VBParser.OptionBaseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionBaseStmt</c>
	/// labeled alternative in <see cref="VBParser.ModuleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionBaseStmt([NotNull] VBParser.OptionBaseStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.filecopyStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilecopyStmt([NotNull] VBParser.FilecopyStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.filecopyStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilecopyStmt([NotNull] VBParser.FilecopyStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>inlineIfThenElse</c>
	/// labeled alternative in <see cref="VBParser.ifThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInlineIfThenElse([NotNull] VBParser.InlineIfThenElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>inlineIfThenElse</c>
	/// labeled alternative in <see cref="VBParser.ifThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInlineIfThenElse([NotNull] VBParser.InlineIfThenElseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.EndStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndStmt([NotNull] VBParser.EndStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.EndStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndStmt([NotNull] VBParser.EndStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.MacroIfThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacroIfThenElseStmt([NotNull] VBParser.MacroIfThenElseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.MacroIfThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacroIfThenElseStmt([NotNull] VBParser.MacroIfThenElseStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.implementsStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplementsStmt([NotNull] VBParser.ImplementsStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.implementsStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplementsStmt([NotNull] VBParser.ImplementsStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComplexType([NotNull] VBParser.ComplexTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComplexType([NotNull] VBParser.ComplexTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.outputList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputList([NotNull] VBParser.OutputListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.outputList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputList([NotNull] VBParser.OutputListContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsMinus</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsMinus([NotNull] VBParser.VsMinusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsMinus</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsMinus([NotNull] VBParser.VsMinusContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsImp</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsImp([NotNull] VBParser.VsImpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsImp</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsImp([NotNull] VBParser.VsImpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.AttributeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeStmt([NotNull] VBParser.AttributeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.AttributeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeStmt([NotNull] VBParser.AttributeStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsGeq</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsGeq([NotNull] VBParser.VsGeqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsGeq</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsGeq([NotNull] VBParser.VsGeqContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.Block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] VBParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.Block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] VBParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.CloseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCloseStmt([NotNull] VBParser.CloseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.CloseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCloseStmt([NotNull] VBParser.CloseStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.iCS_B_FunctionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_B_FunctionCall([NotNull] VBParser.ICS_B_FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.iCS_B_FunctionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_B_FunctionCall([NotNull] VBParser.ICS_B_FunctionCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.Subscripts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubscripts([NotNull] VBParser.SubscriptsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.Subscripts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubscripts([NotNull] VBParser.SubscriptsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.lineInputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineInputStmt([NotNull] VBParser.LineInputStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.lineInputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineInputStmt([NotNull] VBParser.LineInputStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaseType([NotNull] VBParser.BaseTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaseType([NotNull] VBParser.BaseTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>optionPrivateModuleStmt</c>
	/// labeled alternative in <see cref="VBParser.ModuleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionPrivateModuleStmt([NotNull] VBParser.OptionPrivateModuleStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionPrivateModuleStmt</c>
	/// labeled alternative in <see cref="VBParser.ModuleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionPrivateModuleStmt([NotNull] VBParser.OptionPrivateModuleStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsMult</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsMult([NotNull] VBParser.VsMultContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsMult</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsMult([NotNull] VBParser.VsMultContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsAssign</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsAssign([NotNull] VBParser.VsAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsAssign</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsAssign([NotNull] VBParser.VsAssignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.putStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPutStmt([NotNull] VBParser.PutStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.putStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPutStmt([NotNull] VBParser.PutStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonOperator([NotNull] VBParser.ComparisonOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonOperator([NotNull] VBParser.ComparisonOperatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.PropertyLetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyLetStmt([NotNull] VBParser.PropertyLetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.PropertyLetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyLetStmt([NotNull] VBParser.PropertyLetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.raiseEventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRaiseEventStmt([NotNull] VBParser.RaiseEventStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.raiseEventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRaiseEventStmt([NotNull] VBParser.RaiseEventStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ambiguousKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAmbiguousKeyword([NotNull] VBParser.AmbiguousKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ambiguousKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAmbiguousKeyword([NotNull] VBParser.AmbiguousKeywordContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.enumerationStmt_Constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerationStmt_Constant([NotNull] VBParser.EnumerationStmt_ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.enumerationStmt_Constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerationStmt_Constant([NotNull] VBParser.EnumerationStmt_ConstantContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.PropertySetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertySetStmt([NotNull] VBParser.PropertySetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.PropertySetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertySetStmt([NotNull] VBParser.PropertySetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.PropertyGetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyGetStmt([NotNull] VBParser.PropertyGetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.PropertyGetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyGetStmt([NotNull] VBParser.PropertyGetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.Module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule([NotNull] VBParser.ModuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.Module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule([NotNull] VBParser.ModuleContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ModuleBodyElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleBodyElement([NotNull] VBParser.ModuleBodyElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ModuleBodyElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleBodyElement([NotNull] VBParser.ModuleBodyElementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ifElseIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfElseIfBlockStmt([NotNull] VBParser.IfElseIfBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ifElseIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfElseIfBlockStmt([NotNull] VBParser.IfElseIfBlockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>caseCondIs</c>
	/// labeled alternative in <see cref="VBParser.sC_Cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseCondIs([NotNull] VBParser.CaseCondIsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caseCondIs</c>
	/// labeled alternative in <see cref="VBParser.sC_Cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseCondIs([NotNull] VBParser.CaseCondIsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsMod</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsMod([NotNull] VBParser.VsModContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsMod</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsMod([NotNull] VBParser.VsModContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.iCS_S_MembersCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_S_MembersCall([NotNull] VBParser.ICS_S_MembersCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.iCS_S_MembersCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_S_MembersCall([NotNull] VBParser.ICS_S_MembersCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.TypeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeStmt([NotNull] VBParser.TypeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.TypeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeStmt([NotNull] VBParser.TypeStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ModuleConfig"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleConfig([NotNull] VBParser.ModuleConfigContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ModuleConfig"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleConfig([NotNull] VBParser.ModuleConfigContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.memberFunctionOrArrayCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberFunctionOrArrayCallStmt([NotNull] VBParser.MemberFunctionOrArrayCallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.memberFunctionOrArrayCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberFunctionOrArrayCallStmt([NotNull] VBParser.MemberFunctionOrArrayCallStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsAmp</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsAmp([NotNull] VBParser.VsAmpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsAmp</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsAmp([NotNull] VBParser.VsAmpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.implicitCallStmt_InBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicitCallStmt_InBlock([NotNull] VBParser.ImplicitCallStmt_InBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.implicitCallStmt_InBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicitCallStmt_InBlock([NotNull] VBParser.ImplicitCallStmt_InBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsEq</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsEq([NotNull] VBParser.VsEqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsEq</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsEq([NotNull] VBParser.VsEqContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsAnd</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsAnd([NotNull] VBParser.VsAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsAnd</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsAnd([NotNull] VBParser.VsAndContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.onGoSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnGoSubStmt([NotNull] VBParser.OnGoSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.onGoSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnGoSubStmt([NotNull] VBParser.OnGoSubStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.iCS_B_MemberFunctionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_B_MemberFunctionCall([NotNull] VBParser.ICS_B_MemberFunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.iCS_B_MemberFunctionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_B_MemberFunctionCall([NotNull] VBParser.ICS_B_MemberFunctionCallContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>caseCondValue</c>
	/// labeled alternative in <see cref="VBParser.sC_Cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseCondValue([NotNull] VBParser.CaseCondValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caseCondValue</c>
	/// labeled alternative in <see cref="VBParser.sC_Cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseCondValue([NotNull] VBParser.CaseCondValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.fieldLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldLength([NotNull] VBParser.FieldLengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.fieldLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldLength([NotNull] VBParser.FieldLengthContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.BlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStmt([NotNull] VBParser.BlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.BlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStmt([NotNull] VBParser.BlockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.whileWendStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileWendStmt([NotNull] VBParser.WhileWendStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.whileWendStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileWendStmt([NotNull] VBParser.WhileWendStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.constSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstSubStmt([NotNull] VBParser.ConstSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.constSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstSubStmt([NotNull] VBParser.ConstSubStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>optionCompareStmt</c>
	/// labeled alternative in <see cref="VBParser.ModuleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionCompareStmt([NotNull] VBParser.OptionCompareStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionCompareStmt</c>
	/// labeled alternative in <see cref="VBParser.ModuleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionCompareStmt([NotNull] VBParser.OptionCompareStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.iCS_S_VariableCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_S_VariableCall([NotNull] VBParser.ICS_S_VariableCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.iCS_S_VariableCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_S_VariableCall([NotNull] VBParser.ICS_S_VariableCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.eCS_ProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterECS_ProcedureCall([NotNull] VBParser.ECS_ProcedureCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.eCS_ProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitECS_ProcedureCall([NotNull] VBParser.ECS_ProcedureCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.lockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLockStmt([NotNull] VBParser.LockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.lockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLockStmt([NotNull] VBParser.LockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.mkdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMkdirStmt([NotNull] VBParser.MkdirStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.mkdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMkdirStmt([NotNull] VBParser.MkdirStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.SubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubStmt([NotNull] VBParser.SubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.SubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubStmt([NotNull] VBParser.SubStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.saveSettingStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSaveSettingStmt([NotNull] VBParser.SaveSettingStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.saveSettingStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSaveSettingStmt([NotNull] VBParser.SaveSettingStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ArgCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgCall([NotNull] VBParser.ArgCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ArgCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgCall([NotNull] VBParser.ArgCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.typeHint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeHint([NotNull] VBParser.TypeHintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.typeHint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeHint([NotNull] VBParser.TypeHintContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ChdriveStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChdriveStmt([NotNull] VBParser.ChdriveStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ChdriveStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChdriveStmt([NotNull] VBParser.ChdriveStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.macroIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacroIfBlockStmt([NotNull] VBParser.MacroIfBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.macroIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacroIfBlockStmt([NotNull] VBParser.MacroIfBlockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] VBParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] VBParser.ReturnStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.seekStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeekStmt([NotNull] VBParser.SeekStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.seekStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeekStmt([NotNull] VBParser.SeekStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.resumeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResumeStmt([NotNull] VBParser.ResumeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.resumeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResumeStmt([NotNull] VBParser.ResumeStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsLiteral</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsLiteral([NotNull] VBParser.VsLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsLiteral</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsLiteral([NotNull] VBParser.VsLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ifConditionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfConditionStmt([NotNull] VBParser.IfConditionStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ifConditionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfConditionStmt([NotNull] VBParser.IfConditionStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] VBParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] VBParser.TypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsEqv</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsEqv([NotNull] VBParser.VsEqvContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsEqv</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsEqv([NotNull] VBParser.VsEqvContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.killStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKillStmt([NotNull] VBParser.KillStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.killStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKillStmt([NotNull] VBParser.KillStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.EnumerationStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerationStmt([NotNull] VBParser.EnumerationStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.EnumerationStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerationStmt([NotNull] VBParser.EnumerationStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.typeOfStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeOfStmt([NotNull] VBParser.TypeOfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.typeOfStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeOfStmt([NotNull] VBParser.TypeOfStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.DoLoopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoLoopStmt([NotNull] VBParser.DoLoopStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.DoLoopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoLoopStmt([NotNull] VBParser.DoLoopStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsNeq</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsNeq([NotNull] VBParser.VsNeqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsNeq</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsNeq([NotNull] VBParser.VsNeqContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsTypeOf</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsTypeOf([NotNull] VBParser.VsTypeOfContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsTypeOf</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsTypeOf([NotNull] VBParser.VsTypeOfContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.iCS_B_MemberSubCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_B_MemberSubCall([NotNull] VBParser.ICS_B_MemberSubCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.iCS_B_MemberSubCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_B_MemberSubCall([NotNull] VBParser.ICS_B_MemberSubCallContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsValueCalls</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsValueCalls([NotNull] VBParser.VsValueCallsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsValueCalls</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsValueCalls([NotNull] VBParser.VsValueCallsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.EraseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEraseStmt([NotNull] VBParser.EraseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.EraseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEraseStmt([NotNull] VBParser.EraseStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ModuleBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleBody([NotNull] VBParser.ModuleBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ModuleBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleBody([NotNull] VBParser.ModuleBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>caseCondTo</c>
	/// labeled alternative in <see cref="VBParser.sC_Cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseCondTo([NotNull] VBParser.CaseCondToContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caseCondTo</c>
	/// labeled alternative in <see cref="VBParser.sC_Cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseCondTo([NotNull] VBParser.CaseCondToContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ConstStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstStmt([NotNull] VBParser.ConstStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ConstStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstStmt([NotNull] VBParser.ConstStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsOr</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsOr([NotNull] VBParser.VsOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsOr</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsOr([NotNull] VBParser.VsOrContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ifBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBlockStmt([NotNull] VBParser.IfBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ifBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBlockStmt([NotNull] VBParser.IfBlockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.redimSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRedimSubStmt([NotNull] VBParser.RedimSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.redimSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRedimSubStmt([NotNull] VBParser.RedimSubStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsNew</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsNew([NotNull] VBParser.VsNewContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsNew</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsNew([NotNull] VBParser.VsNewContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.unlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnlockStmt([NotNull] VBParser.UnlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.unlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnlockStmt([NotNull] VBParser.UnlockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.macroElseIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacroElseIfBlockStmt([NotNull] VBParser.MacroElseIfBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.macroElseIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacroElseIfBlockStmt([NotNull] VBParser.MacroElseIfBlockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.goSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGoSubStmt([NotNull] VBParser.GoSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.goSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGoSubStmt([NotNull] VBParser.GoSubStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.rmdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRmdirStmt([NotNull] VBParser.RmdirStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.rmdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRmdirStmt([NotNull] VBParser.RmdirStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.EventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventStmt([NotNull] VBParser.EventStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.EventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventStmt([NotNull] VBParser.EventStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.letStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetStmt([NotNull] VBParser.LetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.letStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetStmt([NotNull] VBParser.LetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.randomizeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRandomizeStmt([NotNull] VBParser.RandomizeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.randomizeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRandomizeStmt([NotNull] VBParser.RandomizeStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.forEachStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForEachStmt([NotNull] VBParser.ForEachStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.forEachStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForEachStmt([NotNull] VBParser.ForEachStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.midStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMidStmt([NotNull] VBParser.MidStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.midStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMidStmt([NotNull] VBParser.MidStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.openStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpenStmt([NotNull] VBParser.OpenStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.openStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpenStmt([NotNull] VBParser.OpenStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.lineLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineLabel([NotNull] VBParser.LineLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.lineLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineLabel([NotNull] VBParser.LineLabelContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsXor</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsXor([NotNull] VBParser.VsXorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsXor</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsXor([NotNull] VBParser.VsXorContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsGt</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsGt([NotNull] VBParser.VsGtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsGt</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsGt([NotNull] VBParser.VsGtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsLeq</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsLeq([NotNull] VBParser.VsLeqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsLeq</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsLeq([NotNull] VBParser.VsLeqContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.setattrStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetattrStmt([NotNull] VBParser.SetAttrStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.setattrStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetattrStmt([NotNull] VBParser.SetAttrStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ModuleOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleOptions([NotNull] VBParser.ModuleOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ModuleOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleOptions([NotNull] VBParser.ModuleOptionsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.sendkeysStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSendkeysStmt([NotNull] VBParser.SendkeysStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.sendkeysStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSendkeysStmt([NotNull] VBParser.SendkeysStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.forNextStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForNextStmt([NotNull] VBParser.ForNextStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.forNextStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForNextStmt([NotNull] VBParser.ForNextStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintStmt([NotNull] VBParser.PrintStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintStmt([NotNull] VBParser.PrintStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.variableCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableCallStmt([NotNull] VBParser.VariableCallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.variableCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableCallStmt([NotNull] VBParser.VariableCallStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ErrorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErrorStmt([NotNull] VBParser.ErrorStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ErrorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErrorStmt([NotNull] VBParser.ErrorStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ExitStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExitStmt([NotNull] VBParser.ExitStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ExitStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExitStmt([NotNull] VBParser.ExitStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.argsCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgsCall([NotNull] VBParser.ArgsCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.argsCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgsCall([NotNull] VBParser.ArgsCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.timeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeStmt([NotNull] VBParser.TimeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.timeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeStmt([NotNull] VBParser.TimeStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.resetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResetStmt([NotNull] VBParser.ResetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.resetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResetStmt([NotNull] VBParser.ResetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>optionExplicitStmt</c>
	/// labeled alternative in <see cref="VBParser.ModuleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionExplicitStmt([NotNull] VBParser.OptionExplicitStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionExplicitStmt</c>
	/// labeled alternative in <see cref="VBParser.ModuleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionExplicitStmt([NotNull] VBParser.OptionExplicitStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.sC_CaseElse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSC_CaseElse([NotNull] VBParser.SC_CaseElseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.sC_CaseElse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSC_CaseElse([NotNull] VBParser.SC_CaseElseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.setStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetStmt([NotNull] VBParser.SetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.setStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetStmt([NotNull] VBParser.SetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.memberSubCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberSubCallStmt([NotNull] VBParser.MemberSubCallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.memberSubCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberSubCallStmt([NotNull] VBParser.MemberSubCallStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ImplicitCallStmt_InStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicitCallStmt_InStmt([NotNull] VBParser.ImplicitCallStmt_InStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ImplicitCallStmt_InStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicitCallStmt_InStmt([NotNull] VBParser.ImplicitCallStmt_InStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.variableListStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableListStmt([NotNull] VBParser.VariableListStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.variableListStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableListStmt([NotNull] VBParser.VariableListStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.AmbiguousIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAmbiguousIdentifier([NotNull] VBParser.AmbiguousIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.AmbiguousIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAmbiguousIdentifier([NotNull] VBParser.AmbiguousIdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsPow</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsPow([NotNull] VBParser.VsPowContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsPow</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsPow([NotNull] VBParser.VsPowContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ifElseBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfElseBlockStmt([NotNull] VBParser.IfElseBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ifElseBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfElseBlockStmt([NotNull] VBParser.IfElseBlockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.iCS_S_FunctionOrArrayCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_S_FunctionOrArrayCall([NotNull] VBParser.ICS_S_FunctionOrArrayCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.iCS_S_FunctionOrArrayCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_S_FunctionOrArrayCall([NotNull] VBParser.ICS_S_FunctionOrArrayCallContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsPlus</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsPlus([NotNull] VBParser.VsPlusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsPlus</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsPlus([NotNull] VBParser.VsPlusContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsStruct</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsStruct([NotNull] VBParser.VsStructContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsStruct</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsStruct([NotNull] VBParser.VsStructContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.letterrange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetterrange([NotNull] VBParser.LetterrangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.letterrange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetterrange([NotNull] VBParser.LetterrangeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.widthStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWidthStmt([NotNull] VBParser.WidthStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.widthStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWidthStmt([NotNull] VBParser.WidthStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.withStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithStmt([NotNull] VBParser.WithStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.withStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithStmt([NotNull] VBParser.WithStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.memberCall_Value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberCall_Value([NotNull] VBParser.MemberCall_ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.memberCall_Value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberCall_Value([NotNull] VBParser.MemberCall_ValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ModuleBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleBlock([NotNull] VBParser.ModuleBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ModuleBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleBlock([NotNull] VBParser.ModuleBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.variableSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableSubStmt([NotNull] VBParser.VariableSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.variableSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableSubStmt([NotNull] VBParser.VariableSubStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.ModuleAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleAttributes([NotNull] VBParser.ModuleAttributesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.ModuleAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleAttributes([NotNull] VBParser.ModuleAttributesContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsNot</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsNot([NotNull] VBParser.VsNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsNot</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsNot([NotNull] VBParser.VsNotContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.goToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGoToStmt([NotNull] VBParser.GoToStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.goToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGoToStmt([NotNull] VBParser.GoToStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.certainIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCertainIdentifier([NotNull] VBParser.CertainIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.certainIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCertainIdentifier([NotNull] VBParser.CertainIdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.unloadStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnloadStmt([NotNull] VBParser.UnloadStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.unloadStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnloadStmt([NotNull] VBParser.UnloadStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.DateStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateStmt([NotNull] VBParser.DateStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.DateStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateStmt([NotNull] VBParser.DateStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.onGoToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnGoToStmt([NotNull] VBParser.OnGoToStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.onGoToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnGoToStmt([NotNull] VBParser.OnGoToStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>vsIs</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsIs([NotNull] VBParser.VsIsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsIs</c>
	/// labeled alternative in <see cref="VBParser.ValueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsIs([NotNull] VBParser.VsIsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.macroElseBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacroElseBlockStmt([NotNull] VBParser.MacroElseBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.macroElseBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacroElseBlockStmt([NotNull] VBParser.MacroElseBlockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.eCS_MemberProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterECS_MemberProcedureCall([NotNull] VBParser.ECS_MemberProcedureCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.eCS_MemberProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitECS_MemberProcedureCall([NotNull] VBParser.ECS_MemberProcedureCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.loadStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoadStmt([NotNull] VBParser.LoadStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.loadStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoadStmt([NotNull] VBParser.LoadStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.Literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] VBParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.Literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] VBParser.LiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.variableStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableStmt([NotNull] VBParser.VariableStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.variableStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableStmt([NotNull] VBParser.VariableStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.StartRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartRule([NotNull] VBParser.StartRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.StartRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartRule([NotNull] VBParser.StartRuleContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.nameStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameStmt([NotNull] VBParser.NameStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.nameStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameStmt([NotNull] VBParser.NameStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBParser.savepictureStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSavepictureStmt([NotNull] VBParser.SavepictureStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBParser.savepictureStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSavepictureStmt([NotNull] VBParser.SavepictureStmtContext context);
}
} // namespace Rubberduck.VBA
